#|echo: FALSE
# Loading in the data
df <- read_csv("elmarket_13_19.csv")
head(df)
dput(head(df))
format(df$date)
df <-
df %>%
mutate(year = year(date))
View(df)
# Create new variables in data frame containing the year, month and day in
# which the observation is made.
df <-
df %>%
mutate(
year = year(date),
month = month(date),
weekday = weekdays(date)
)
?weekdays
# Create new variables in data frame containing the year, month and day in
# which the observation is made.
df <-
df %>%
mutate(
year = year(date),
month = month(date),
weekday = wday(date,
label = FALSE,
week_start = 1)
)
# Quantity regressions
d_first_stage <-
lm(
volume ~ price + temp + as.factor(year) * as.factor(month) + as.factor(weekday),
df
)
# Quantity regressions
d_first_stage <-
lm(
volume ~ price + temperature + as.factor(year) * as.factor(month) + as.factor(weekday),
df
)
summary(d_first_stage)
#| echo: false
#| output: false
# Loading required packages.
library(tidyverse)  # loads ggplot2, dplyr, readr
library(lubridate)  # for date/time manipulation
library(stargazer)  # regression tables
stargazer(d_first_stage, type = "latex")
?formula
# Create new variables in data frame containing the year, month and day in
# which the observation is made.
df <-
df %>%
mutate(
year = year(date),
month = month(date),
weekday = wday(date,
label = FALSE,
week_start = 1)
)
# Create a function that performs OLS regressions
OLS <- function(data, formula) {
reg <- lm(formula = formula, data = data)
return(reg)
}
# Define formulas to apply in the regressions
formulas <-
list(
f1 = volume ~ price + temperature,
f2 = volume ~ price
)
# Perform regressions for all the specified formulas
# Empty reg list
reg_list <- list()
# Loop over all formulas
for (i in formulas) {
# Perform regression with specified formula
reg <- OLS(data = df, formula = formulas[i])
# Save the regression
reg_list[[i]] <- reg
}
# Perform regressions for all the specified formulas
# Empty reg list
reg_list <- list()
# Loop over all formulas
for (i in 1:length(formulas)) {
# Perform regression with specified formula
reg <- OLS(data = df, formula = formulas[i])
# Save the regression
reg_list[[i]] <- reg
}
formulas[1]
# Perform regressions for all the specified formulas
# Empty reg list
reg_list <- list()
# Loop over all formulas
for (i in 1:length(formulas)) {
# Perform regression with specified formula
reg <- lm(formulas[i], df)
# Save the regression
reg_list[[i]] <- reg
}
# Empty reg list
reg_list <- vector("list", length(formulas))
View(reg_list)
# Perform regressions for all the specified formulas
# Empty reg list
reg_list <- vector("list", length(formulas))
# Loop over all formulas
for (i in 1:length(formulas)) {
# Perform regression with specified formula
reg <- lm(formulas[i], df)
# Save the regression
reg_list[[i]] <- reg
}
# Perform regressions for all the specified formulas
# Empty reg list
reg_list <- list()
# Loop over all formulas
for (i in 1:length(formulas)) {
# Perform regression with specified formula
reg <- lm(formulas[[i]], df)
# Save the regression
reg_list[[i]] <- reg
}
reg_list[i]
summary(reg_list[1])
summary(reg_list[[1]])
# Create regression tables
# Loop over all regressions
for (j in 1:length(reg_list)) {
stargazer(reg_list[[j]], type = "text")
}
stargazer(reg_list, type = "text")
reg_list[[1]]
test <- formula(volume~price+temperature)
test
stargazer(lm(test, df), type = "text")
# Define formulas to apply in the regressions
formulas <-
list(
formula(volume ~ price + temperature),
formula(volume ~ price)
)
# Perform regressions for all the specified formulas
# Empty reg list
reg_list <- list()
# Loop over all formulas
for (i in 1:length(formulas)) {
# Perform regression with specified formula
reg <- lm(formulas[[i]], df)
# Save the regression
reg_list[[i]] <- reg
}
# Create regression tables
stargazer(reg_list, type = "text")
# Define your formulas as character strings
formula_strings <- c("volume ~ price + temperature", "volume ~ price")
# Use sapply to create a named list of formulas
formulas <- sapply(formula_strings, as.formula, simplify = FALSE,
USE.NAMES = TRUE)
names(formulas) <- sapply(formulas, function(f) as.character(f[[2]]))
# Check the formulas list
formulas
# Perform regressions for all the specified formulas
# Empty reg list
reg_list <- list()
# Loop over all formulas
for (i in 1:length(formulas)) {
# Perform regression with specified formula
reg <- lm(formulas[[i]], df)
# Save the regression
reg_list[[i]] <- reg
}
# Create regression tables
stargazer(reg_list, type = "text")
# Create regression tables
stargazer(reg_list, type = "text",dep.var.labels = "volume")
?stargazer
# Create regression tables
stargazer(reg_list, type = "text",dep.var.labels = "volume",
omit = c(as.factor(year),as.factor(month),as.factor(weekday)))
# Create regression tables
stargazer(reg_list, type = "text",dep.var.labels = "volume",
omit = c("as.factor(year)","as.factor(month)","as.factor(weekday)"))
# Create regression tables
stargazer(reg_list,
type = "text",
dep.var.labels = "volume",
# Omit the dummies from the table to increase readability
omit = c(
"as.factor(year)",
"as.factor(month)",
"as.factor(weekday)"
)
)
#| echo: false
#| output: false
# Loading required packages.
library(tidyverse)  # loads ggplot2, dplyr, readr
library(lubridate)  # for date/time manipulation
library(stargazer)  # regression tables
#| echo: false
#| output: false
# Loading in the data
df <- read_csv("elmarket_13_19.csv")
# Create a data frame of monthly averages of the variables volume, price,
# temperature and wind_production in long format.
df_avg_long <-
df %>%
# Select the specified variables
select(date, volume, temperature, price, wind_production) %>%
# Calculate monthly averages for each variable
mutate(year_month = floor_date(date, "month")) %>%
group_by(year_month) %>%
summarise(
avg_vol = mean(volume, na.rm = TRUE),
avg_temp = mean(temperature, na.rm = TRUE),
avg_price = mean(price, na.rm = TRUE),
avg_wind = mean(wind_production, na.rm = TRUE)
) %>%
# Scale the values of volume and wind to make the plot readable
mutate(
avg_vol = avg_vol / 10^5,
avg_wind = avg_wind / 10^3
) %>%
# Pivot to long format
pivot_longer(
cols = -year_month,
names_to = "variable",
values_to = "scaled values"
)
#| label: variable_plot
#| fig-cap: Monthly averages of temperature, volume, price and wind power production. The values have been scaled to fit into a single plot.
# Plot the specified variables
df_avg_long %>%
ggplot(
aes(
x = year_month,
y = `scaled values`,
col = variable
)
) +
geom_line() +
labs(
x = "",
y = ""
) +
theme_classic()
# Create new variables in data frame containing the year, month and day in
# which the observation is made.
df <-
df %>%
mutate(
year = year(date),
month = month(date),
weekday = wday(date,
label = FALSE,
week_start = 1)
)
# Define formulas to apply in the regressions
formulas <-
list(
# Structural form
volume ~
price + temperature + as.factor(year) + as.factor(month) + as.factor(weekday),
# Reduced form
volume ~
price
# First stage
)
# Perform regressions for all the specified formulas
# Empty reg list
reg_list <- list()
# Loop over all formulas
for (i in 1:length(formulas)) {
# Perform regression with specified formula
reg <- lm(formulas[[i]], df)
# Save the regression
reg_list[[i]] <- reg
}
# Create regression tables
stargazer(reg_list,
type = "text",
dep.var.labels = "volume",
# Omit the dummies from the table to increase readability
omit = c(
"as.factor(year)",
"as.factor(month)",
"as.factor(weekday)"
)
)
# Create regression tables
stargazer(reg_list,
type = "text",
dep.var.labels = "volume",
# Omit the dummies from the table to increase readability
omit = c(
"as.factor(year)",
"as.factor(month)",
"as.factor(weekday)"
)
)
# Create regression tables
stargazer(reg_list,
type = "text",
dep.var.labels = "volume",
omit = c("as.factor(year)", "as.factor(month)", "as.factor(weekday)"))
# Perform regressions for all the specified formulas
# Empty reg list
reg_list <- list()
# Loop over all formulas
for (i in 1:length(formulas)) {
# Perform regression with specified formula
reg <- lm(formulas[[i]], df)
# Save the regression
reg_list[[i]] <- reg
}
# Create regression tables
stargazer(reg_list,
type = "text",
dep.var.labels = "volume",
omit = c("as.factor(year)", "as.factor(month)", "as.factor(weekday)"))
# Define formulas to apply in the regressions
formulas <-
list(
# Structural form
volume ~ price + temperature + as.factor(year) + as.factor(month) + as.factor(weekday),
# Reduced form
volume ~ price
# First stage
)
# Perform regressions for all the specified formulas
# Empty reg list
reg_list <- list()
# Loop over all formulas
for (i in 1:length(formulas)) {
# Perform regression with specified formula
reg <- lm(formulas[[i]], df)
# Save the regression
reg_list[[i]] <- reg
}
# Create regression tables
stargazer(reg_list,
type = "text",
dep.var.labels = "volume",
omit = c("as.factor(year)", "as.factor(month)", "as.factor(weekday)"))
# Create new variables in data frame containing the year, month and day in
# which the observation is made.
df <-
df %>%
mutate(
year = year(date),
month = month(date),
weekday = wday(date,
label = FALSE,
week_start = 1)
)
# Define formulas to apply in the regressions
formulas <-
list(
# Structural form
volume ~
price + temperature + as.factor(year) + as.factor(month) + as.factor(weekday),
# Reduced form
volume ~
price
# First stage
)
# Perform regressions for all the specified formulas
# Empty reg list
reg_list <- list()
# Loop over all formulas
for (i in 1:length(formulas)) {
# Perform regression with specified formula
reg <- lm(formulas[[i]], df)
# Save the regression
reg_list[[i]] <- reg
}
# Create regression tables
stargazer(reg_list,
type = "text",
dep.var.labels = "volume",
omit = c("as.factor(year)", "as.factor(month)", "as.factor(weekday)"))
# Create regression tables
stargazer(reg_list,
type = "text",
dep.var.labels = "volume",
omit = c(as.factor(year), "as.factor(month)", "as.factor(weekday)"))
# Create regression tables
stargazer(reg_list,
type = "text",
dep.var.labels = "volume",keep = c("price", "temperature"))
# Create regression tables
cat("
\\begin{tabel}[!htb]
\\centering
\\caption{Regression table showing the first stage, reduced for and OLS regressions}
\\label{tab:regtable}
"}
# Create regression tables
cat("
\\begin{table}[!htb]
\\centering
\\caption{Regression table showing the first stage, reduced for and OLS regressions}
\\label{tab:regtable}
")
stargazer(reg_list,
type = "latex",
dep.var.labels = "volume",
keep = c("price", "temperature"))
cat("\\end{table}")
# Create regression tables
stargazer(reg_list,
type = "txt",
dep.var.labels = "volume",
# Omit all the dummies to make regression table more readable
keep = c("price", "temperature"))
# Define formulas to apply in the regressions
formulas <-
list(
# Structural form: Demand
volume ~
price + temperature + as.factor(year) + as.factor(month) + as.factor(weekday),
# Reduced form: Demand
#volume ~
#price
# First stage: Demand
# Structural form: Price
price ~
magazine_level + temperature + wind_production + as.factor(year) + as.factor(month) + as.factor(weekday),
# Reduced form: Price
#volume ~
#price
# First stage: Price
)
# Define formulas to apply in the regressions
formulas <-
list(
# Structural form: Demand
volume ~
price + temperature + as.factor(year) + as.factor(month) + as.factor(weekday),
# Reduced form: Demand
#volume ~
#price
# First stage: Demand
# Structural form: Price
price ~
magazine_level + temperature + wind_production + as.factor(year) + as.factor(month) + as.factor(weekday)
# Reduced form: Price
#volume ~
#price
# First stage: Price
)
# Perform regressions for all the specified formulas
# Empty reg list
reg_list <- list()
# Loop over all formulas
for (i in 1:length(formulas)) {
# Perform regression with specified formula
reg <- lm(formulas[[i]], df)
# Save the regression
reg_list[[i]] <- reg
}
# Create regression tables
stargazer(reg_list,
type = "text",
dep.var.labels = "volume",
# Omit all the dummies to make regression table more readable
keep = c("price", "temperature", "wind_production", "magazine_level"))
# Create regression tables
stargazer(reg_list,
type = "text",
dep.var.labels = c("volume", "price"),
# Omit all the dummies to make regression table more readable
keep = c("price", "temperature", "wind_production", "magazine_level"))
stargazer(reg_list,
type = "text",
dep.var.labels = c("volume", "price"))
# Create regression tables
stargazer(reg_list,
type = "text",
dep.var.labels = c("volume", "price"),
# Omit all the dummies to make regression table more readable
keep = c("price", "temperature", "wind_production", "magazine_level", "Constant"))
# Create regression tables
stargazer(reg_list,
type = "text",
#dep.var.labels = c("volume", "price"),
# Omit all the dummies to make regression table more readable
keep = c("price", "temperature", "wind_production", "magazine_level", "Constant"))
# Create regression tables
stargazer(reg_list,
type = "text",
dep.var.labels = c("volume", "price"),
# Omit all the dummies to make regression table more readable
keep = c("price", "temperature", "wind_production", "magazine_level", "Constant"))
# Create regression tables
stargazer(reg_list,
type = "text",
dep.var.labels = c(volume, "price"),
# Omit all the dummies to make regression table more readable
keep = c("price", "temperature", "wind_production", "magazine_level", "Constant"))
# Create regression tables
stargazer(reg_list,
type = "text",
dep.var.labels = c("volume", "price"),
# Omit all the dummies to make regression table more readable
keep = c("price", "temperature", "wind_production", "magazine_level", "Constant"))
